<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[@janeeats on code and design]]></title>
  <link href="http://janeeats.github.com/atom.xml" rel="self"/>
  <link href="http://janeeats.github.com/"/>
  <updated>2013-04-22T13:03:29-04:00</updated>
  <id>http://janeeats.github.com/</id>
  <author>
    <name><![CDATA[Jane Vora]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Arrays vs. Linked Lists]]></title>
    <link href="http://janeeats.github.com/blog/2013/04/22/arrays-vs-linked-lists/"/>
    <updated>2013-04-22T12:27:00-04:00</updated>
    <id>http://janeeats.github.com/blog/2013/04/22/arrays-vs-linked-lists</id>
    <content type="html"><![CDATA[<p>Today at Flatiron School we started researching common Computer Science questions we might be asked during interviews. A common topic is the difference between Arrays and Linked Lists. I&#8217;ve used arrays lots of times in coding, but I had no idea what a linked list is. Below is a summary about what the differences between the two and their common use cases.</p>

<p>Both Arrays and Linked Lists are used to store linear data of similar types. Depending on your application or requirement, you may elect to pick one over the other.</p>

<!-- more -->


<h2>Arrays</h2>

<p><strong>What&#8217;s an Array?</strong></p>

<ul>
<li>Typically arrays are denoted in bracket notation.</li>
</ul>


<!-- code example -->


<pre><code>fav_nums = [10, 27, 12]
fav_colors = ["yellow", "red", "orange", "green"]
</code></pre>

<ul>
<li>Array size is allocated when it&#8217;s declared.</li>
</ul>


<!-- code example -->


<pre><code>fav_nums.size # =&gt; returns 3
fav_colors.size # =&gt; returns 4
</code></pre>

<p><strong>Advantages:</strong></p>

<ul>
<li>A common use case for arrays is frequent searching.</li>
</ul>


<!-- code example -->


<pre><code>fav_nums[0] # =&gt; returns 10
fav_colors[3] # =&gt; returns "green"
</code></pre>

<p><strong>Disadvantages:</strong></p>

<ul>
<li>Array size is often fixed and specified at compile time. If you allocate arrays large in size in anticipation of data needs, you&#8217;re allocating arrays with wasted space and may potentially crash.</li>
<li>Inserting new elements or deleting existing elements at the front of an array is potentially expensive because existing elements need to be shifted or unshifted to make room.</li>
<li>If you have trouble remembering the difference between shift and unshift&#8230; just take out the f and think about what they do. Got that handy tip from stackoverflow!</li>
</ul>


<h2>Linked Lists</h2>

<p><strong>What&#8217;s a Linked List?</strong></p>

<ul>
<li>The structure of Linked Lists consist of nodes. Think of nodes like the links in a chain.</li>
<li>Each node contains 2 fields: a data field (the actual stored value) and reference field (which points to which element is next aka the &#8220;link&#8221;).</li>
<li>The references or pointers in nodes are what connect all of the nodes together.</li>
</ul>


<p><strong>Pros:</strong></p>

<ul>
<li>Linked Lists may be sized dynamically. If your application requires dynamically sized lists, you&#8217;ll want to use a Linked List.</li>
<li>Use Linked Lists if your application requires frequent insertion or deletion of elements at a specific location.</li>
</ul>


<p><strong>Why?</strong></p>

<ul>
<li>Memory is allocated differently for Linked Lists than Arrays.</li>
<li>Arrays lump one block of memory for all of its elements.</li>
<li>Linked Lists allocate space for each element separately in its own block of memory called a &#8220;node&#8221; or a &#8220;linked list element.&#8221;</li>
</ul>


<p><strong>What else?</strong></p>

<ul>
<li>It&#8217;s easier to store data of different sizes in a linked list. An array assumes every element is exactly the same size.</li>
<li>As you mentioned, it&#8217;s easier for a linked list to grow organically. An array&#8217;s size needs to be known ahead of time, or re-created when it needs to grow.</li>
<li>Shuffling a linked list is just a matter of changing what points to what. Shuffling an array is more complicated and/or takes more memory.</li>
<li>As long as your iterations all happen in a &#8220;foreach&#8221; context, you don&#8217;t lose any performance in iteration.</li>
</ul>


<p><strong>Resources:</strong></p>

<ul>
<li>Super detailed explanation of <a href="http://cslibrary.stanford.edu/103/LinkedListBasics.pdf">Linked Lists by the CS department at Stanford</a></li>
<li>Good ole <a href="http://en.wikipedia.org/wiki/Linked_list">Wikipedia&#8217;s Linked List entry</a></li>
<li>Ruby doesn&#8217;t have Linked Lists. Hashes are similar to Linked Lists in that they have references (keys) and values, but they&#8217;re not the same. Here&#8217;s how someone wrote <a href="http://khakimov.com/blog/2012/05/11/back-to-school-linked-list-with-ruby/">a Linked List in Ruby</a>.</li>
<li>Listened to <a href="http://prettymuchamazing.com/music/stream/solange-true-ep">Solange&#8217;s True EP</a> and the new <a href="http://www.youtube.com/watch?v=5NV6Rdv1a3I">Daft Punk &#8220;Get Lucky&#8221; track</a> while writing this blog post</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Authorization Basics in Rails]]></title>
    <link href="http://janeeats.github.com/blog/2013/03/23/authorization-basics-in-rails/"/>
    <updated>2013-03-23T17:27:00-04:00</updated>
    <id>http://janeeats.github.com/blog/2013/03/23/authorization-basics-in-rails</id>
    <content type="html"><![CDATA[<p>My new Flatiron School team, Anthony, Ei-lene, Eugene, and I are working on HandRaise, an application to handle student questions during lab or working sessions. HandRaise will help us keep track of which student questions are up next for teachers to answer. In this post, I explain how we implemented some basic authorization to allow or restrict specific users in taking certain actions.</p>

<!-- more -->


<p><strong>Authentication:</strong> Before we assigned user permissions, we first implemented authentication so that users may sign in and sign out of the application. We followed the RailsCast tutorial, <a href="http://railscasts.com/episodes/250-authentication-from-scratch-revised">Authentication from Scratch</a>.</p>

<p><strong>Defining Permissions:</strong> Once we had authentication running, we defined user roles. In our User model, we defined users roles as admins and students.</p>

<pre><code>class User &lt; ActiveRecord::Base
  attr_accessible :role

  USER_ROLES = {
    :admin =&gt; 0,
    :student =&gt; 10
  }
</code></pre>

<p>Then we wrote instance methods in our User model that allowed us to define which users were admins and students.</p>

<pre><code>def set_as_admin 
  self.role = USER_ROLES[:admin]
end

def set_as_student 
  self.role = USER_ROLES[:student]
end
</code></pre>

<p><strong>Authorization:</strong> Next, we created methods to check if a user can edit the issue, destroy the issue, or mark the issue as resolved. We knew we wanted our authorization methods to read like English so that the other team members would be able to easily understand what is happening in the code. We wanted the following methods to work:</p>

<pre><code>def can_edit?(issue)
  true if owns?(issue) || admin?
end

def can_destroy?(issue)
  true if owns?(issue) || admin?
end

def can_resolve?(issue)
  true if owns?(issue) || admin?
end
</code></pre>

<p>In order for the methods above to work, we had to create the methods admin? and owns?(issue). The admin? method checks if the user is an admin. The owns?(issue) method let&#8217;s us pass an issue as an argument to see if the user created it.</p>

<pre><code>def owns?(issue)
  true if self.id == issue.user_id
end

def admin?
  true if self.role_name == :admin
end

def role_name
  User.user_roles.key(self.role)
end

def self.user_roles
  USER_ROLES
end
</code></pre>

<p>After testing in the console to make sure our new methods worked, we added them to our view. The links to edit, resolve, or delete issues are only shown to users that are authorized to access those actions. Below is an example of how we used our new authorization methods in the view to check if a user has the ability to edit an issue:</p>

<pre><code>&lt;% if @current_user.can_edit?(issue) %&gt;
&lt;%= link_to 'Edit', edit_issue_path(issue) %&gt;
&lt;% end %&gt;
</code></pre>

<p><strong>Next Steps:</strong> As you can see, we have some repetition in our authorization methods. The conditions for the can_edit?, can_resolve?, and can_delete? are all the same. Our next steps will include refactoring this code so we keep it dry.</p>

<p><strong>Resources:</strong></p>

<ul>
<li>Ryan Bates wrote an awesome authorization gem for Ruby on Rails called <a href="https://github.com/ryanb/cancan">CanCan</a></li>
<li>RailsCast on how to implement <a href="http://railscasts.com/episodes/192-authorization-with-cancan">Authorization using CanCan</a></li>
<li>While writing this post, I listened to this <a href="https://soundcloud.com/diplo/diplo-friends-bbcr1xtra-march">mixtape by Diplo</a> from the Diplo &amp; Friends radio show on BBC 1xtra. It&#8217;s good.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Normalizing Data in Rails Forms for Beginners - Part 2]]></title>
    <link href="http://janeeats.github.com/blog/2013/03/09/normalizing-data-in-rails-forms-for-beginners-part-2/"/>
    <updated>2013-03-09T15:53:00-05:00</updated>
    <id>http://janeeats.github.com/blog/2013/03/09/normalizing-data-in-rails-forms-for-beginners-part-2</id>
    <content type="html"><![CDATA[<p>This post, part two of two, explains some customizations I included in a basic form for creating and editing groups on my team&#8217;s app, Jane&#8217;s Lunch. In my previous post, part one, I explained how I <a href="http://janeeats.github.com/blog/2013/03/09/rails-form-helpers-for-beginners/">installed a timepicker</a> for the groups form. In this post, I explain how I created a custom form helper to normalize the states input for user addresses.</p>

<!-- more -->


<p>Jane&#8217;s Lunch is built on the <a href="https://hackfood.ordr.in/">Ordr.In API</a>, which requires the two-letter, state abbreviation for delivery addresses. To ensure that the data we received from the group form would be clean and play well with the Ordr.In API, I used a custom form helper that would normalize the states input for group addresses.</p>

<p>I put the following code in the Group helper file:</p>

<pre><code>def us_states
[
  ['Alabama', 'AL'],
  ['Alaska', 'AK'],
  ['Arizona', 'AZ'],
  ['Arkansas', 'AR'],
  ['California', 'CA'],
  ['Colorado', 'CO'],
  ['Connecticut', 'CT'],
  ['Delaware', 'DE'],
  ['District of Columbia', 'DC'],
  ['Florida', 'FL'],
  ['Georgia', 'GA'],
  ['Hawaii', 'HI'],
  ['Idaho', 'ID'],
  ['Illinois', 'IL'],
  ['Indiana', 'IN'],
  ['Iowa', 'IA'],
  ['Kansas', 'KS'],
  ['Kentucky', 'KY'],
  ['Louisiana', 'LA'],
  ['Maine', 'ME'],
  ['Maryland', 'MD'],
  ['Massachusetts', 'MA'],
  ['Michigan', 'MI'],
  ['Minnesota', 'MN'],
  ['Mississippi', 'MS'],
  ['Missouri', 'MO'],
  ['Montana', 'MT'],
  ['Nebraska', 'NE'],
  ['Nevada', 'NV'],
  ['New Hampshire', 'NH'],
  ['New Jersey', 'NJ'],
  ['New Mexico', 'NM'],
  ['New York', 'NY'],
  ['North Carolina', 'NC'],
  ['North Dakota', 'ND'],
  ['Ohio', 'OH'],
  ['Oklahoma', 'OK'],
  ['Oregon', 'OR'],
  ['Pennsylvania', 'PA'],
  ['Puerto Rico', 'PR'],
  ['Rhode Island', 'RI'],
  ['South Carolina', 'SC'],
  ['South Dakota', 'SD'],
  ['Tennessee', 'TN'],
  ['Texas', 'TX'],
  ['Utah', 'UT'],
  ['Vermont', 'VT'],
  ['Virginia', 'VA'],
  ['Washington', 'WA'],
  ['West Virginia', 'WV'],
  ['Wisconsin', 'WI'],
  ['Wyoming', 'WY']
]
end
</code></pre>

<p>My Group helper file is located in janeslunch/app/helpers/group_helper.rb. This helper method should actually be moved to the Application helper file so that it may be used throughout this US states helper method may be used throughout the application.</p>

<p>Then in the view for the group form, I added this form helper to call the us_states helper:</p>

<pre><code>&lt;%= f.label(:state) %&gt;
&lt;%= f.select :state, us_states%&gt;
</code></pre>

<p>In the select helper tag above, I&#8217;m passing in, as an argument, the us_states Group helper method, which returns the array of all the states and their abbreviations. The array of states gets passed to the select helper tag as the options for the state select field.</p>

<p>On the frontend, the states are spelled out in the input dropdown:
<img src="http://janeeats.github.com/images/states-form-helper-frontend.jpg" title="States Form Helper Input Dropdown" alt="Form Helper Example " /></p>

<p>In the database, the states data is saved in the format that the Ordr.in API likes:
<img src="http://janeeats.github.com/images/states-form-helper-db.png" title="States Form Helper Helps us Normalize Data Inputs in our DB" alt="Form Helper Example " /></p>

<p><strong>Resources:</strong></p>

<ul>
<li>Help from StackOver flow for my <a href="http://stackoverflow.com/questions/6400010/rails-select-drop-down-for-states">states select tag</a></li>
<li>If you need select tags for other geographic locations, check out this handy gem <a href="https://github.com/jim/carmen">Carmen</a> (and for <a href="https://github.com/jim/carmen-rails">rails</a>).</li>
<li>Rails Guide for <a href="http://guides.rubyonrails.org/form_helpers.html">Form Helpers</a></li>
<li>Listened to this <a href="https://soundcloud.com/charlotte-sky/sets/2013-remix">playlist</a> while writing this post.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Normalizing Data in Rails Forms for Beginners - Part 1]]></title>
    <link href="http://janeeats.github.com/blog/2013/03/09/rails-form-helpers-for-beginners/"/>
    <updated>2013-03-09T13:23:00-05:00</updated>
    <id>http://janeeats.github.com/blog/2013/03/09/rails-form-helpers-for-beginners</id>
    <content type="html"><![CDATA[<p>My Flatiron School team, Crystal, Tim and Tyler, and I recently presented our group project, Jane&#8217;s Lunch, at a <a href="http://www.meetup.com/nyc-on-rails/">NYC on Rails MeetUp</a>. Jane&#8217;s Lunch is a web application that makes lunch delivery for group orders easy and fun.</p>

<p>I worked on a small piece of our Groups controller and some of the basic forms for creating and editing groups. This post is part one of two. In part one, I&#8217;m explaining how I installed a timepicker for the group forms. In <a href="http://janeeats.github.com/blog/2013/03/09/normalizing-data-in-rails-forms-for-beginners-part-2/">part two</a>, I&#8217;ll explain how I created a custom form helper to normalize the states input for user addresses.</p>

<!-- more -->


<h2>TimePicker</h2>

<p>Our group form requires users to select a designated lunch time. We wanted to normalize the time data so that we wouldn&#8217;t have problems parsing different time formats (e.g. &#8220;1:30PM&#8221; vs. &#8220;1:30 p.m.&#8221; vs. &#8220;13:30&#8221;). A timepicker would solve this issue. I found <a href="http://jdewit.github.com/bootstrap-timepicker/">Bootstrap Timepicker</a>, a timepicker built by <a href="https://github.com/jdewit/bootstrap-timepicker">@jdewit</a> for use with Twitter Bootstrap.</p>

<p>To install the gem, I added this line to our Gemfile:</p>

<pre><code>gem 'bootstrap-timepicker-rails'
</code></pre>

<p>Next, I added this line to install the CSS for Bootstrap Timepicker:</p>

<pre><code> *= require bootstrap-timepicker
</code></pre>

<p>Then, I added this line to link to the JavaScript file for Bootstrap Timepicker:</p>

<pre><code>//= require bootstrap-timepicker
</code></pre>

<p>For beginners, you&#8217;ll want to include the entire line if you are installing the css and javascript. The code looks commented out, but Rails will actually implement that code even though it&#8217;s commented out.</p>

<p>In the view for our group form, I added the following:</p>

<pre><code>&lt;%= f.label(:lunch_time) %&gt;
  &lt;div class='input-append bootstrap-timepicker' style='display: inline;'&gt;
    &lt;input id='lunch_time' class='input-small' type='text' name='group[lunch_time]'&gt;
    &lt;span class='add-on'&gt;&lt;i class='icon-time'&gt;&lt;/i&gt;&lt;/span&gt;
  &lt;/div&gt;

  &lt;script type="text/javascript"&gt;
  $(document).ready(function(){
    $('#lunch_time').timepicker({
      template: 'dropdown',
      minuteStep: 15,
      showMeridian: false,
      showSeconds: false,
      defaultTime: '&lt;%= @group.lunch_time || "12:00" %&gt;'
    });
  });
  &lt;/script&gt; 
</code></pre>

<p>Here&#8217;s a breakdown to explain the block of code above:
<img src="http://janeeats.github.com/images/timepicker-step1.png" title="Bootstrap Timepicker Code Implementation Example" alt="Timepicker Code " />
Make sure to use an id not a class for the input selector that timepicker calls. I initially made lunch_time another class for the input instead of an id and it did not work.</p>

<p><img src="http://janeeats.github.com/images/timepicker-step2.png" title="Bootstrap Timepicker Code Implementation Example" alt="Timepicker Code " />
I was wary of using an input form helper, so I just used regular HTML and mixed it in with the erb format. However, I wanted to make sure that my input name would be passed along with the rest of the group data in the params hash, so I used my browser inspector to check the name format for other inputs that used the rails form helpers. The names were set to &#8216;group[attribute_name]&#8217; so that&#8217;s the format I followed for the timepicker input.</p>

<p><img src="http://janeeats.github.com/images/timepicker-step3.png" title="Bootstrap Timepicker Code Implementation Example" alt="Timepicker Code " />
My timepicker() call would not work without the document.ready.</p>

<p><img src="http://janeeats.github.com/images/timepicker-step4.png" title="Bootstrap Timepicker Code Implementation Example" alt="Timepicker Code " />
I set the configurations for timepicker based on the <a href="http://jdewit.github.com/bootstrap-timepicker/">documentation</a>.</p>

<p><img src="http://janeeats.github.com/images/timepicker-step5.png" title="Bootstrap Timepicker Code Implementation Example" alt="Timepicker Code " />
The timepicker is a little buggy if you do not set a defaultTime. In some cases, the timepicker will show NaN:NaN if you don&#8217;t have any defaultTime set.</p>

<p>If the defaultTime, is only set to &#8220;12:00&#8221;, then the timepicker will always show &#8220;12:00,&#8221; even if the user has already set a lunch time.</p>

<p>The code fix above lets us set the timepicker to show the lunch time previously specified by the user or to show &#8220;12:00&#8221; if the user has not yet set it.</p>

<p><strong>Resources:</strong></p>

<ul>
<li><a href="http://jdewit.github.com/bootstrap-timepicker/">Bootstrap Timepicker</a>: A TimePicker built for use with Twitter Bootstrap</li>
<li><a href="https://github.com/tispratik/bootstrap-timepicker-rails">Gem</a> for integrating Bootstrap Timepicker with Rails asset pipeline</li>
<li>Rails Guide for <a href="http://guides.rubyonrails.org/form_helpers.html">Form Helpers</a></li>
<li>I listened to this <a href="https://soundcloud.com/strangemachinemusic/sets/cool-2013">Playlist</a> while writing this blog post.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jane Dreams of Programming]]></title>
    <link href="http://janeeats.github.com/blog/2013/02/24/how-to-eat-an-elephant/"/>
    <updated>2013-02-24T14:33:00-05:00</updated>
    <id>http://janeeats.github.com/blog/2013/02/24/how-to-eat-an-elephant</id>
    <content type="html"><![CDATA[<h2>How Programming Is Changing The Way I View Everything</h2>

<p>Lately, I&#8217;ve been dreaming of programming. In my dreams, I&#8217;m breaking down problems, explaining them in metaphors. It reminds me of my dreams in Chinese while I studied abroad in Beijing my junion year of college. Living in China changed how I saw everything&#8230; for example I will never, ever take Modern Plumbing for granted again.</p>

<p>In this post, I share 3 observations on how learning Ruby these past few weeks has already profoundly changed the way I think.</p>

<!-- more -->


<p><strong>How Do You Eat an Elephant? One Bite at a Time.</strong>
I recently had a skype session with my business partner. We&#8217;ve been trying to launch a business for the past year or so. We&#8217;ve hit so many road blocks. Learning to program really highlighted for me the source of our problems. We were trying to bite off more than we could chew. Instead of trying to solve one problem at a time, we were trying to solve 20 simultaneously. We came back from the drawing board with a simple idea, broken down into small, manageable bites.</p>

<p><strong>Embrace the Frustration.</strong>
Programming is challenging, rewarding, and at times extremely frustrating. Being frustrated is part of the process. I&#8217;m not going to master everything in Ruby immediately. Every line of code I&#8217;m testing will not pass on the first try. I am learning to be comfortable with my frustration. When I see an error, I&#8217;m trying to catch myself from internally screaming, &#8220;Why the fuck does this not work?!&#8221; to responding with &#8220;Yes! An error! I can fix that.&#8221;</p>

<p><strong>Use Your Broken-Ass Skills Constantly To Become Fluent.</strong>
In the same way I learned Chinese by living and studying in Beijing, the Flatiron School is truly an immersive way to learn programming - just dive in and try to use the little code you know as often as possible. The language will start to feel more fluent the more you use it. I need to remind myself constantly that it&#8217;s ok to just use my broken ass Ruby and that eventually it will become <a href="http://eloquentruby.com/">eloquent Ruby</a>&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jiro Dreams of Sushi and Jane Dreams of Applications]]></title>
    <link href="http://janeeats.github.com/blog/2013/02/05/why-i-am-at-the-flatiron-school/"/>
    <updated>2013-02-05T17:22:00-05:00</updated>
    <id>http://janeeats.github.com/blog/2013/02/05/why-i-am-at-the-flatiron-school</id>
    <content type="html"><![CDATA[<h2>Why am I at the Flatiron School?</h2>

<p>While I liked my old job as the Interactive Designer/Developer for the New York City Economic Development Corporation, I was ready for a change. I&#8217;m pretty sure if I had to design just one more email template or tweak one more WordPress theme, I was gonna go crazy. I fell out of love with design at my old job. Then I encountered two pieces of inspiration that helped me find my way&#8230;</p>

<!-- more -->


<p><strong>Jiro Dreams of Sushi.</strong> It&#8217;s on Netflix, so if you haven&#8217;t seen it yet, I highly recommend you watch it or at least add it to your <a href="http://movies.netflix.com/WiMovie/Jiro_Dreams_of_Sushi/70181716?locale=en-US" title="Jiro Dreams of Sushi on Netflix Streaming">instant queue</a>. In case you haven&#8217;t heard of it before, Jiro Dreams of Sushi is a documentary that follows Jiro, an 85-year-old master sushi chef in Japan and owner of Sukiyabashi Jiro, a Michelin three-star, 10-seat restaurant.</p>

<p>On the second time I watched it, I was really struck by the way Jiro spoke about his craft. He clearly loves his work and it drives him. He strives for perfection.</p>

<blockquote><p>Jiro says:
&#8220;Once you decide your profession, you must immerse yourself in the study of it. You must learn to fall in love with your work. Never complain about your work. You must dedicate your life to mastering that skill. That&#8217;s the secret of success&#8230; and is the key to being regarded honorably.&#8221;</p></blockquote>

<p><strong>As a web designer, I realized that I needed to immerse myself in the study of web development.</strong> I needed to figure out a way to fall back in love with web design. I knew that I couldn&#8217;t keep talking and dreaming about &#8220;wouldn&#8217;t it be cool if&#8230;&#8221; applications. I must build the applications I want to use.</p>

<blockquote><p>His oldest son, Yoshikazu, who leads the work at his father&#8217;s restaurant, says of his father:
&#8220;Always look ahead and above yourself. Always try to improve on yourself. Always strive to elevate your craft. That&#8217;s what he taught me.&#8221;</p></blockquote>

<p>From a career perspective, I knew that in order to elevate my work, I needed to be able to provide more than simple front end design. With HTML/CSS skills being almost a requirement nowadays for most web designers, eventually I would have to learn how to program.</p>

<p><strong>I first heard about Ruby on Rails</strong> from my oldest brother, <a href="http://twitter.com/theevo" title="@theevo">Theo</a>, who is a huuuuge fan of <a href="http://37signals.com/" title="the coolest company">37signals</a> (for those who don&#8217;t know 37signals gave birth to Ruby on Rails). I had been curious about learning Ruby on Rails for some time and that&#8217;s what led me to find the <a href="http://flatironschool.com/" title="Learn Ruby on Rails in NYC">Flatiron School</a>.</p>

<p>Lastly, I want to end with a <strong>book recommendation: <em>Steal Like an Artist</em> by Austin Kleon.</strong> I think the tagline, &#8220;10 Things Nobody Told You About Being Creative,&#8221; sums it up well. I think a bit more accurate tagline is &#8220;10 Guidelines to Help You In Being Creative.&#8221; The book is an excellent read.. but if you&#8217;re on a tight budget, he&#8217;s got a great <a href="http://www.youtube.com/watch?feature=player_embedded&amp;v=oww7oB9rjgw" title="Austin Kleon TED Talk on Creative Work">TED talk</a>.</p>

<p><strong>To anyone out there stuck in a rut,</strong> Kleon&#8217;s book really inspired me to outline concrete actions to start producing creative work again. It literally motivated me to clean everything on, inside, and around my desk (both physical and virtual). It motivated me to make changes in the way I work to be more productive.</p>

<p>What have y&#8217;all found helpful for encouraging big life shifts?</p>
]]></content>
  </entry>
  
</feed>
