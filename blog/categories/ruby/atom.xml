<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | @janeeats on code and design]]></title>
  <link href="http://janeeats.github.com/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://janeeats.github.com/"/>
  <updated>2013-04-29T23:41:17-04:00</updated>
  <id>http://janeeats.github.com/</id>
  <author>
    <name><![CDATA[Jane Vora]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Notes on Chapters 1 to 3 of POODIR]]></title>
    <link href="http://janeeats.github.com/blog/2013/04/29/notes-on-chapters-1-to-3-of-poodir/"/>
    <updated>2013-04-29T23:39:00-04:00</updated>
    <id>http://janeeats.github.com/blog/2013/04/29/notes-on-chapters-1-to-3-of-poodir</id>
    <content type="html"><![CDATA[<p>Since Flatiron School is over, I'm committing myself to reading a new programming book each week and blogging about the important key points from each chapter. I've decided to start with <a href="https://twitter.com/sandimetz">Sandi Metz</a>'s book, <a href="http://www.amazon.com/Sandi-Metz/e/B0097WWH62">Practical Object-Oriented Design in Ruby</a>. When Avi started his lectures on Object Orientation, he showed us this <a href="http://www.confreaks.com/videos/240-goruco2009-solid-object-oriented-design">video of Sandi Metz's awesome presentation</a> at the GuRoKu conference. POODIR goes further in depth with code examples of the object oriented design principles she refers to in the video. Below are my takeaways for POODIR chapters 1 &amp; 2.</p>

<!-- more -->


<h2>Chap 1: OOD</h2>

<p><strong>What is Design?</strong></p>

<ul>
<li>Design: how you arrange code.</li>
<li>Design your applications to be flexible because eventually specs or requirements will change.</li>
<li>"Arranging code to efficiently accomodate change is a matter of design."</li>
</ul>


<h2>Chap 2: Desinging Classes with a Single Responsibility</h2>

<p><strong>How to tell if a class has a single responsibility?</strong></p>

<ul>
<li>Rephrase every class method as a question - and see if that question makes sense. e.g. "Please Mr. Gear, what is your tire size?" does not make sense. Why should gears be responsible for details about tires?</li>
<li>Describe each class in one sentence. If your sentence has the word "and," then the class probably has more than one responsibility. If your sentence includes the word "or," then the class probably has unrelated responsibilities.</li>
<li>Cohesion: descriptor for single responsibility concept (e.g. "Highly cohesive" classes have a single responsibility.)</li>
</ul>


<p><strong>Coding Techniques that Embrace Change</strong></p>

<p><em>Isolate Data and Data Structures</em></p>

<ul>
<li>Objects contain Data and Behavior.</li>
<li>"Behavior is captured in methods and invoked by sending messages.""</li>
<li>Define behavior once. When it changes, you only have to change it in once place.</li>
<li>Bottom Line: Hide Data away. For example, use attribute readers instead of instance variables (referenced all over your application) so that you reference methods (defined once). If the Data changes, you just have to edit it once versus all over your app where you've used the instance variable.</li>
<li>Also hide Data Structures away through methods that isolate messy structural information and keep your code DRY.</li>
</ul>


<p><em>Single Responsibility Everything</em></p>

<ul>
<li>Major Takeaway: Methods should also have a single responsibility.</li>
<li>"[Refactorings of methods from multiple to single responsibility] are needed, not become the design is clear, but because it isn't. You do not have to know where you're going to use good design practices to get there. Good practices reveal design."</li>
<li>Single Responsibility Methods: expose previously hidden qualities, avoid the need for comments, encourage reuse, and are easy to move to other classes.</li>
<li>Separate responsibilities into different classes. "Concentrate on the primary class. If you identify extra responsibilities that you cannot yet remove, isolate them."</li>
</ul>


<h2>Chap 3: Managing Dependencies</h2>

<p><strong>What are Dependencies?</strong></p>

<ul>
<li>You know if your class has dependencies if you see another class name in it (e.g. another class name, name of methods sent to other classes other than self, arguments of those methods, or order of those arguments).</li>
<li>Classes that are tightly coupled together are more likely to cause problems when you need to make a changes. A change in an object creates changes in another dependent object. When you test one object, you'll likely be testing the other object simultaneously.</li>
<li>Agh: Dependncies are especially destructive when chained (e.g. Class A knows things about Class B, which knows things about Class C).</li>
</ul>


<p><strong>How to Decouple Code and Reduce Dependencies</strong></p>

<ul>
<li>Dependency Injection allows us to reorgnize code so that classes don't have any explicit dependencies on other classes.</li>
<li>Isolate instance creation so that you explicitily expose the dependency</li>
<li>Isolate references to classes other than self (e.g. make a new method that makes the external call)</li>
<li>Let methods take in a hash of arguments rather than a specific fixed-order</li>
<li>Pattern: few fixed-order arguments followed by an options hash</li>
<li>Cool Tip: To define default values of arguments of boolean values, instead of using || method, try fetch method or merging a defaults hash.</li>
<li>Use a Wrapper so you DRY out the creation of instances that require you make calls to external interfaces</li>
</ul>


<p><strong>Dependency Direction</strong></p>

<ul>
<li>Depend on objects that are less likely to changes as often as self</li>
<li>Depend on abstraction rather than concretion because abstraction is more stable</li>
<li>"Depend on things that change less often than you do"</li>
</ul>


<p><strong>Follow Up Links:</strong></p>

<ul>
<li>In Chapter 2, Metz mentions the <a href="http://ruby-doc.org/core-1.9.3/Struct.html">Struct Ruby class</a> when discussing how to isolate responsibilities in a model when you're not yet ready to separate a responsibility into an entirely new model. Structs are described as a solution for when you need a "lightweight object."</li>
<li>While writing this post, I listened to this super awesome <a href="https://soundcloud.com/urban_stylz_blog/diplo-friends-ryan-hemsworth">mix by Ryan Hemsworth for Diplo &amp; Friends</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arrays vs. Linked Lists]]></title>
    <link href="http://janeeats.github.com/blog/2013/04/22/arrays-vs-linked-lists/"/>
    <updated>2013-04-22T12:27:00-04:00</updated>
    <id>http://janeeats.github.com/blog/2013/04/22/arrays-vs-linked-lists</id>
    <content type="html"><![CDATA[<p>Today at Flatiron School we started researching common Computer Science questions we might be asked during interviews. A common topic is the difference between Arrays and Linked Lists. I've used arrays lots of times in coding, but I had no idea what a linked list is. Below is a summary about what the differences between the two and their common use cases.</p>

<p>Both Arrays and Linked Lists are used to store linear data of similar types. Depending on your application or requirement, you may elect to pick one over the other.</p>

<!-- more -->


<h2>Arrays</h2>

<p><strong>What's an Array?</strong></p>

<ul>
<li>Typically arrays are denoted in bracket notation.</li>
</ul>


<!-- code example -->


<pre><code>fav_nums = [10, 27, 12]
fav_colors = ["yellow", "red", "orange", "green"]
</code></pre>

<ul>
<li>Array size is allocated when it's declared.</li>
</ul>


<!-- code example -->


<pre><code>fav_nums.size # =&gt; returns 3
fav_colors.size # =&gt; returns 4
</code></pre>

<p><strong>Advantages:</strong></p>

<ul>
<li>A common use case for arrays is frequent searching.</li>
</ul>


<!-- code example -->


<pre><code>fav_nums[0] # =&gt; returns 10
fav_colors[3] # =&gt; returns "green"
</code></pre>

<p><strong>Disadvantages:</strong></p>

<ul>
<li>Array size is often fixed and specified at compile time. If you allocate arrays large in size in anticipation of data needs, you're allocating arrays with wasted space and may potentially crash.</li>
<li>Inserting new elements or deleting existing elements at the front of an array is potentially expensive because existing elements need to be shifted or unshifted to make room.</li>
<li>If you have trouble remembering the difference between shift and unshift... just take out the f and think about what they do. Got that handy tip from stackoverflow!</li>
</ul>


<h2>Linked Lists</h2>

<p><strong>What's a Linked List?</strong></p>

<ul>
<li>The structure of Linked Lists consist of nodes. Think of nodes like the links in a chain.</li>
<li>Each node contains 2 fields: a data field (the actual stored value) and reference field (which points to which element is next aka the "link").</li>
<li>The references or pointers in nodes are what connect all of the nodes together.</li>
</ul>


<p><strong>Pros:</strong></p>

<ul>
<li>Linked Lists may be sized dynamically. If your application requires dynamically sized lists, you'll want to use a Linked List.</li>
<li>Use Linked Lists if your application requires frequent insertion or deletion of elements at a specific location.</li>
</ul>


<p><strong>Why?</strong></p>

<ul>
<li>Memory is allocated differently for Linked Lists than Arrays.</li>
<li>Arrays lump one block of memory for all of its elements.</li>
<li>Linked Lists allocate space for each element separately in its own block of memory called a "node" or a "linked list element."</li>
</ul>


<p><strong>What else?</strong></p>

<ul>
<li>It's easier to store data of different sizes in a linked list. An array assumes every element is exactly the same size.</li>
<li>As you mentioned, it's easier for a linked list to grow organically. An array's size needs to be known ahead of time, or re-created when it needs to grow.</li>
<li>Shuffling a linked list is just a matter of changing what points to what. Shuffling an array is more complicated and/or takes more memory.</li>
<li>As long as your iterations all happen in a "foreach" context, you don't lose any performance in iteration.</li>
</ul>


<p><strong>Resources:</strong></p>

<ul>
<li>Super detailed explanation of <a href="http://cslibrary.stanford.edu/103/LinkedListBasics.pdf">Linked Lists by the CS department at Stanford</a></li>
<li>Good ole <a href="http://en.wikipedia.org/wiki/Linked_list">Wikipedia's Linked List entry</a></li>
<li>Ruby doesn't have Linked Lists. Hashes are similar to Linked Lists in that they have references (keys) and values, but they're not the same. Here's how someone wrote <a href="http://khakimov.com/blog/2012/05/11/back-to-school-linked-list-with-ruby/">a Linked List in Ruby</a>.</li>
<li>Listened to <a href="http://prettymuchamazing.com/music/stream/solange-true-ep">Solange's True EP</a> and the new <a href="http://www.youtube.com/watch?v=5NV6Rdv1a3I">Daft Punk "Get Lucky" track</a> while writing this blog post</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Normalizing Data in Rails Forms for Beginners - Part 2]]></title>
    <link href="http://janeeats.github.com/blog/2013/03/09/normalizing-data-in-rails-forms-for-beginners-part-2/"/>
    <updated>2013-03-09T15:53:00-05:00</updated>
    <id>http://janeeats.github.com/blog/2013/03/09/normalizing-data-in-rails-forms-for-beginners-part-2</id>
    <content type="html"><![CDATA[<p>This post, part two of two, explains some customizations I included in a basic form for creating and editing groups on my team's app, Jane's Lunch. In my previous post, part one, I explained how I <a href="/blog/2013/03/09/rails-form-helpers-for-beginners/">installed a timepicker</a> for the groups form. In this post, I explain how I created a custom form helper to normalize the states input for user addresses.</p>

<!-- more -->


<p>Jane's Lunch is built on the <a href="https://hackfood.ordr.in/">Ordr.In API</a>, which requires the two-letter, state abbreviation for delivery addresses. To ensure that the data we received from the group form would be clean and play well with the Ordr.In API, I used a custom form helper that would normalize the states input for group addresses.</p>

<p>I put the following code in the Group helper file:</p>

<pre><code>def us_states
[
  ['Alabama', 'AL'],
  ['Alaska', 'AK'],
  ['Arizona', 'AZ'],
  ['Arkansas', 'AR'],
  ['California', 'CA'],
  ['Colorado', 'CO'],
  ['Connecticut', 'CT'],
  ['Delaware', 'DE'],
  ['District of Columbia', 'DC'],
  ['Florida', 'FL'],
  ['Georgia', 'GA'],
  ['Hawaii', 'HI'],
  ['Idaho', 'ID'],
  ['Illinois', 'IL'],
  ['Indiana', 'IN'],
  ['Iowa', 'IA'],
  ['Kansas', 'KS'],
  ['Kentucky', 'KY'],
  ['Louisiana', 'LA'],
  ['Maine', 'ME'],
  ['Maryland', 'MD'],
  ['Massachusetts', 'MA'],
  ['Michigan', 'MI'],
  ['Minnesota', 'MN'],
  ['Mississippi', 'MS'],
  ['Missouri', 'MO'],
  ['Montana', 'MT'],
  ['Nebraska', 'NE'],
  ['Nevada', 'NV'],
  ['New Hampshire', 'NH'],
  ['New Jersey', 'NJ'],
  ['New Mexico', 'NM'],
  ['New York', 'NY'],
  ['North Carolina', 'NC'],
  ['North Dakota', 'ND'],
  ['Ohio', 'OH'],
  ['Oklahoma', 'OK'],
  ['Oregon', 'OR'],
  ['Pennsylvania', 'PA'],
  ['Puerto Rico', 'PR'],
  ['Rhode Island', 'RI'],
  ['South Carolina', 'SC'],
  ['South Dakota', 'SD'],
  ['Tennessee', 'TN'],
  ['Texas', 'TX'],
  ['Utah', 'UT'],
  ['Vermont', 'VT'],
  ['Virginia', 'VA'],
  ['Washington', 'WA'],
  ['West Virginia', 'WV'],
  ['Wisconsin', 'WI'],
  ['Wyoming', 'WY']
]
end
</code></pre>

<p>My Group helper file is located in janeslunch/app/helpers/group_helper.rb. This helper method should actually be moved to the Application helper file so that it may be used throughout this US states helper method may be used throughout the application.</p>

<p>Then in the view for the group form, I added this form helper to call the us_states helper:</p>

<pre><code>&lt;%= f.label(:state) %&gt;
&lt;%= f.select :state, us_states%&gt;
</code></pre>

<p>In the select helper tag above, I'm passing in, as an argument, the us_states Group helper method, which returns the array of all the states and their abbreviations. The array of states gets passed to the select helper tag as the options for the state select field.</p>

<p>On the frontend, the states are spelled out in the input dropdown:
<img src="/images/states-form-helper-frontend.jpg" title="States Form Helper Input Dropdown" alt="Form Helper Example " /></p>

<p>In the database, the states data is saved in the format that the Ordr.in API likes:
<img src="/images/states-form-helper-db.png" title="States Form Helper Helps us Normalize Data Inputs in our DB" alt="Form Helper Example " /></p>

<p><strong>Resources:</strong></p>

<ul>
<li>Help from StackOver flow for my <a href="http://stackoverflow.com/questions/6400010/rails-select-drop-down-for-states">states select tag</a></li>
<li>If you need select tags for other geographic locations, check out this handy gem <a href="https://github.com/jim/carmen">Carmen</a> (and for <a href="https://github.com/jim/carmen-rails">rails</a>).</li>
<li>Rails Guide for <a href="http://guides.rubyonrails.org/form_helpers.html">Form Helpers</a></li>
<li>Listened to this <a href="https://soundcloud.com/charlotte-sky/sets/2013-remix">playlist</a> while writing this post.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Normalizing Data in Rails Forms for Beginners - Part 1]]></title>
    <link href="http://janeeats.github.com/blog/2013/03/09/rails-form-helpers-for-beginners/"/>
    <updated>2013-03-09T13:23:00-05:00</updated>
    <id>http://janeeats.github.com/blog/2013/03/09/rails-form-helpers-for-beginners</id>
    <content type="html"><![CDATA[<p>My Flatiron School team, Crystal, Tim and Tyler, and I recently presented our group project, Jane's Lunch, at a <a href="http://www.meetup.com/nyc-on-rails/">NYC on Rails MeetUp</a>. Jane's Lunch is a web application that makes lunch delivery for group orders easy and fun.</p>

<p>I worked on a small piece of our Groups controller and some of the basic forms for creating and editing groups. This post is part one of two. In part one, I'm explaining how I installed a timepicker for the group forms. In <a href="/blog/2013/03/09/normalizing-data-in-rails-forms-for-beginners-part-2/">part two</a>, I'll explain how I created a custom form helper to normalize the states input for user addresses.</p>

<!-- more -->


<h2>TimePicker</h2>

<p>Our group form requires users to select a designated lunch time. We wanted to normalize the time data so that we wouldn't have problems parsing different time formats (e.g. "1:30PM" vs. "1:30 p.m." vs. "13:30"). A timepicker would solve this issue. I found <a href="http://jdewit.github.com/bootstrap-timepicker/">Bootstrap Timepicker</a>, a timepicker built by <a href="https://github.com/jdewit/bootstrap-timepicker">@jdewit</a> for use with Twitter Bootstrap.</p>

<p>To install the gem, I added this line to our Gemfile:</p>

<pre><code>gem 'bootstrap-timepicker-rails'
</code></pre>

<p>Next, I added this line to install the CSS for Bootstrap Timepicker:</p>

<pre><code> *= require bootstrap-timepicker
</code></pre>

<p>Then, I added this line to link to the JavaScript file for Bootstrap Timepicker:</p>

<pre><code>//= require bootstrap-timepicker
</code></pre>

<p>For beginners, you'll want to include the entire line if you are installing the css and javascript. The code looks commented out, but Rails will actually implement that code even though it's commented out.</p>

<p>In the view for our group form, I added the following:</p>

<pre><code>&lt;%= f.label(:lunch_time) %&gt;
  &lt;div class='input-append bootstrap-timepicker' style='display: inline;'&gt;
    &lt;input id='lunch_time' class='input-small' type='text' name='group[lunch_time]'&gt;
    &lt;span class='add-on'&gt;&lt;i class='icon-time'&gt;&lt;/i&gt;&lt;/span&gt;
  &lt;/div&gt;

  &lt;script type="text/javascript"&gt;
  $(document).ready(function(){
    $('#lunch_time').timepicker({
      template: 'dropdown',
      minuteStep: 15,
      showMeridian: false,
      showSeconds: false,
      defaultTime: '&lt;%= @group.lunch_time || "12:00" %&gt;'
    });
  });
  &lt;/script&gt; 
</code></pre>

<p>Here's a breakdown to explain the block of code above:
<img src="/images/timepicker-step1.png" title="Bootstrap Timepicker Code Implementation Example" alt="Timepicker Code " />
Make sure to use an id not a class for the input selector that timepicker calls. I initially made lunch_time another class for the input instead of an id and it did not work.</p>

<p><img src="/images/timepicker-step2.png" title="Bootstrap Timepicker Code Implementation Example" alt="Timepicker Code " />
I was wary of using an input form helper, so I just used regular HTML and mixed it in with the erb format. However, I wanted to make sure that my input name would be passed along with the rest of the group data in the params hash, so I used my browser inspector to check the name format for other inputs that used the rails form helpers. The names were set to 'group[attribute_name]' so that's the format I followed for the timepicker input.</p>

<p><img src="/images/timepicker-step3.png" title="Bootstrap Timepicker Code Implementation Example" alt="Timepicker Code " />
My timepicker() call would not work without the document.ready.</p>

<p><img src="/images/timepicker-step4.png" title="Bootstrap Timepicker Code Implementation Example" alt="Timepicker Code " />
I set the configurations for timepicker based on the <a href="http://jdewit.github.com/bootstrap-timepicker/">documentation</a>.</p>

<p><img src="/images/timepicker-step5.png" title="Bootstrap Timepicker Code Implementation Example" alt="Timepicker Code " />
The timepicker is a little buggy if you do not set a defaultTime. In some cases, the timepicker will show NaN:NaN if you don't have any defaultTime set.</p>

<p>If the defaultTime, is only set to "12:00", then the timepicker will always show "12:00," even if the user has already set a lunch time.</p>

<p>The code fix above lets us set the timepicker to show the lunch time previously specified by the user or to show "12:00" if the user has not yet set it.</p>

<p><strong>Resources:</strong></p>

<ul>
<li><a href="http://jdewit.github.com/bootstrap-timepicker/">Bootstrap Timepicker</a>: A TimePicker built for use with Twitter Bootstrap</li>
<li><a href="https://github.com/tispratik/bootstrap-timepicker-rails">Gem</a> for integrating Bootstrap Timepicker with Rails asset pipeline</li>
<li>Rails Guide for <a href="http://guides.rubyonrails.org/form_helpers.html">Form Helpers</a></li>
<li>I listened to this <a href="https://soundcloud.com/strangemachinemusic/sets/cool-2013">Playlist</a> while writing this blog post.</li>
</ul>

]]></content>
  </entry>
  
</feed>
