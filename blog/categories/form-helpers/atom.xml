<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Form Helpers | @janeeats on code and design]]></title>
  <link href="http://janeeats.github.com/blog/categories/form-helpers/atom.xml" rel="self"/>
  <link href="http://janeeats.github.com/"/>
  <updated>2013-04-22T13:03:29-04:00</updated>
  <id>http://janeeats.github.com/</id>
  <author>
    <name><![CDATA[Jane Vora]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Normalizing Data in Rails Forms for Beginners - Part 2]]></title>
    <link href="http://janeeats.github.com/blog/2013/03/09/normalizing-data-in-rails-forms-for-beginners-part-2/"/>
    <updated>2013-03-09T15:53:00-05:00</updated>
    <id>http://janeeats.github.com/blog/2013/03/09/normalizing-data-in-rails-forms-for-beginners-part-2</id>
    <content type="html"><![CDATA[<p>This post, part two of two, explains some customizations I included in a basic form for creating and editing groups on my team's app, Jane's Lunch. In my previous post, part one, I explained how I <a href="/blog/2013/03/09/rails-form-helpers-for-beginners/">installed a timepicker</a> for the groups form. In this post, I explain how I created a custom form helper to normalize the states input for user addresses.</p>

<!-- more -->


<p>Jane's Lunch is built on the <a href="https://hackfood.ordr.in/">Ordr.In API</a>, which requires the two-letter, state abbreviation for delivery addresses. To ensure that the data we received from the group form would be clean and play well with the Ordr.In API, I used a custom form helper that would normalize the states input for group addresses.</p>

<p>I put the following code in the Group helper file:</p>

<pre><code>def us_states
[
  ['Alabama', 'AL'],
  ['Alaska', 'AK'],
  ['Arizona', 'AZ'],
  ['Arkansas', 'AR'],
  ['California', 'CA'],
  ['Colorado', 'CO'],
  ['Connecticut', 'CT'],
  ['Delaware', 'DE'],
  ['District of Columbia', 'DC'],
  ['Florida', 'FL'],
  ['Georgia', 'GA'],
  ['Hawaii', 'HI'],
  ['Idaho', 'ID'],
  ['Illinois', 'IL'],
  ['Indiana', 'IN'],
  ['Iowa', 'IA'],
  ['Kansas', 'KS'],
  ['Kentucky', 'KY'],
  ['Louisiana', 'LA'],
  ['Maine', 'ME'],
  ['Maryland', 'MD'],
  ['Massachusetts', 'MA'],
  ['Michigan', 'MI'],
  ['Minnesota', 'MN'],
  ['Mississippi', 'MS'],
  ['Missouri', 'MO'],
  ['Montana', 'MT'],
  ['Nebraska', 'NE'],
  ['Nevada', 'NV'],
  ['New Hampshire', 'NH'],
  ['New Jersey', 'NJ'],
  ['New Mexico', 'NM'],
  ['New York', 'NY'],
  ['North Carolina', 'NC'],
  ['North Dakota', 'ND'],
  ['Ohio', 'OH'],
  ['Oklahoma', 'OK'],
  ['Oregon', 'OR'],
  ['Pennsylvania', 'PA'],
  ['Puerto Rico', 'PR'],
  ['Rhode Island', 'RI'],
  ['South Carolina', 'SC'],
  ['South Dakota', 'SD'],
  ['Tennessee', 'TN'],
  ['Texas', 'TX'],
  ['Utah', 'UT'],
  ['Vermont', 'VT'],
  ['Virginia', 'VA'],
  ['Washington', 'WA'],
  ['West Virginia', 'WV'],
  ['Wisconsin', 'WI'],
  ['Wyoming', 'WY']
]
end
</code></pre>

<p>My Group helper file is located in janeslunch/app/helpers/group_helper.rb. This helper method should actually be moved to the Application helper file so that it may be used throughout this US states helper method may be used throughout the application.</p>

<p>Then in the view for the group form, I added this form helper to call the us_states helper:</p>

<pre><code>&lt;%= f.label(:state) %&gt;
&lt;%= f.select :state, us_states%&gt;
</code></pre>

<p>In the select helper tag above, I'm passing in, as an argument, the us_states Group helper method, which returns the array of all the states and their abbreviations. The array of states gets passed to the select helper tag as the options for the state select field.</p>

<p>On the frontend, the states are spelled out in the input dropdown:
<img src="/images/states-form-helper-frontend.jpg" title="States Form Helper Input Dropdown" alt="Form Helper Example " /></p>

<p>In the database, the states data is saved in the format that the Ordr.in API likes:
<img src="/images/states-form-helper-db.png" title="States Form Helper Helps us Normalize Data Inputs in our DB" alt="Form Helper Example " /></p>

<p><strong>Resources:</strong></p>

<ul>
<li>Help from StackOver flow for my <a href="http://stackoverflow.com/questions/6400010/rails-select-drop-down-for-states">states select tag</a></li>
<li>If you need select tags for other geographic locations, check out this handy gem <a href="https://github.com/jim/carmen">Carmen</a> (and for <a href="https://github.com/jim/carmen-rails">rails</a>).</li>
<li>Rails Guide for <a href="http://guides.rubyonrails.org/form_helpers.html">Form Helpers</a></li>
<li>Listened to this <a href="https://soundcloud.com/charlotte-sky/sets/2013-remix">playlist</a> while writing this post.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Normalizing Data in Rails Forms for Beginners - Part 1]]></title>
    <link href="http://janeeats.github.com/blog/2013/03/09/rails-form-helpers-for-beginners/"/>
    <updated>2013-03-09T13:23:00-05:00</updated>
    <id>http://janeeats.github.com/blog/2013/03/09/rails-form-helpers-for-beginners</id>
    <content type="html"><![CDATA[<p>My Flatiron School team, Crystal, Tim and Tyler, and I recently presented our group project, Jane's Lunch, at a <a href="http://www.meetup.com/nyc-on-rails/">NYC on Rails MeetUp</a>. Jane's Lunch is a web application that makes lunch delivery for group orders easy and fun.</p>

<p>I worked on a small piece of our Groups controller and some of the basic forms for creating and editing groups. This post is part one of two. In part one, I'm explaining how I installed a timepicker for the group forms. In <a href="/blog/2013/03/09/normalizing-data-in-rails-forms-for-beginners-part-2/">part two</a>, I'll explain how I created a custom form helper to normalize the states input for user addresses.</p>

<!-- more -->


<h2>TimePicker</h2>

<p>Our group form requires users to select a designated lunch time. We wanted to normalize the time data so that we wouldn't have problems parsing different time formats (e.g. "1:30PM" vs. "1:30 p.m." vs. "13:30"). A timepicker would solve this issue. I found <a href="http://jdewit.github.com/bootstrap-timepicker/">Bootstrap Timepicker</a>, a timepicker built by <a href="https://github.com/jdewit/bootstrap-timepicker">@jdewit</a> for use with Twitter Bootstrap.</p>

<p>To install the gem, I added this line to our Gemfile:</p>

<pre><code>gem 'bootstrap-timepicker-rails'
</code></pre>

<p>Next, I added this line to install the CSS for Bootstrap Timepicker:</p>

<pre><code> *= require bootstrap-timepicker
</code></pre>

<p>Then, I added this line to link to the JavaScript file for Bootstrap Timepicker:</p>

<pre><code>//= require bootstrap-timepicker
</code></pre>

<p>For beginners, you'll want to include the entire line if you are installing the css and javascript. The code looks commented out, but Rails will actually implement that code even though it's commented out.</p>

<p>In the view for our group form, I added the following:</p>

<pre><code>&lt;%= f.label(:lunch_time) %&gt;
  &lt;div class='input-append bootstrap-timepicker' style='display: inline;'&gt;
    &lt;input id='lunch_time' class='input-small' type='text' name='group[lunch_time]'&gt;
    &lt;span class='add-on'&gt;&lt;i class='icon-time'&gt;&lt;/i&gt;&lt;/span&gt;
  &lt;/div&gt;

  &lt;script type="text/javascript"&gt;
  $(document).ready(function(){
    $('#lunch_time').timepicker({
      template: 'dropdown',
      minuteStep: 15,
      showMeridian: false,
      showSeconds: false,
      defaultTime: '&lt;%= @group.lunch_time || "12:00" %&gt;'
    });
  });
  &lt;/script&gt; 
</code></pre>

<p>Here's a breakdown to explain the block of code above:
<img src="/images/timepicker-step1.png" title="Bootstrap Timepicker Code Implementation Example" alt="Timepicker Code " />
Make sure to use an id not a class for the input selector that timepicker calls. I initially made lunch_time another class for the input instead of an id and it did not work.</p>

<p><img src="/images/timepicker-step2.png" title="Bootstrap Timepicker Code Implementation Example" alt="Timepicker Code " />
I was wary of using an input form helper, so I just used regular HTML and mixed it in with the erb format. However, I wanted to make sure that my input name would be passed along with the rest of the group data in the params hash, so I used my browser inspector to check the name format for other inputs that used the rails form helpers. The names were set to 'group[attribute_name]' so that's the format I followed for the timepicker input.</p>

<p><img src="/images/timepicker-step3.png" title="Bootstrap Timepicker Code Implementation Example" alt="Timepicker Code " />
My timepicker() call would not work without the document.ready.</p>

<p><img src="/images/timepicker-step4.png" title="Bootstrap Timepicker Code Implementation Example" alt="Timepicker Code " />
I set the configurations for timepicker based on the <a href="http://jdewit.github.com/bootstrap-timepicker/">documentation</a>.</p>

<p><img src="/images/timepicker-step5.png" title="Bootstrap Timepicker Code Implementation Example" alt="Timepicker Code " />
The timepicker is a little buggy if you do not set a defaultTime. In some cases, the timepicker will show NaN:NaN if you don't have any defaultTime set.</p>

<p>If the defaultTime, is only set to "12:00", then the timepicker will always show "12:00," even if the user has already set a lunch time.</p>

<p>The code fix above lets us set the timepicker to show the lunch time previously specified by the user or to show "12:00" if the user has not yet set it.</p>

<p><strong>Resources:</strong></p>

<ul>
<li><a href="http://jdewit.github.com/bootstrap-timepicker/">Bootstrap Timepicker</a>: A TimePicker built for use with Twitter Bootstrap</li>
<li><a href="https://github.com/tispratik/bootstrap-timepicker-rails">Gem</a> for integrating Bootstrap Timepicker with Rails asset pipeline</li>
<li>Rails Guide for <a href="http://guides.rubyonrails.org/form_helpers.html">Form Helpers</a></li>
<li>I listened to this <a href="https://soundcloud.com/strangemachinemusic/sets/cool-2013">Playlist</a> while writing this blog post.</li>
</ul>

]]></content>
  </entry>
  
</feed>
